namespace Scripting.Engine;

public enum OpcodeType
{
    // push value
    Op0 = 0x00,
    OpFalse = 0x00,
    OpPush1 = 0x01,
    OpPush2 = 0x02,
    OpPush3 = 0x03,
    OpPush4 = 0x04,
    OpPush5 = 0x05,
    OpPush6 = 0x06,
    OpPush7 = 0x07,
    OpPush8 = 0x08,
    OpPush9 = 0x09,
    OpPush10 = 0x0A,
    OpPush11 = 0x0B,
    OpPush12 = 0x0C,
    OpPush13 = 0x0D,
    OpPush14 = 0x0E,
    OpPush15 = 0x0F,
    OpPush16 = 0x10,
    OpPush17 = 0x11,
    OpPush18 = 0x12,
    OpPush19 = 0x13,
    OpPush20 = 0x14,
    OpPush21 = 0x15,
    OpPush22 = 0x16,
    OpPush23 = 0x17,
    OpPush24 = 0x18,
    OpPush25 = 0x19,
    OpPush26 = 0x1A,
    OpPush27 = 0x1B,
    OpPush28 = 0x1C,
    OpPush29 = 0x1D,
    OpPush30 = 0x1E,
    OpPush31 = 0x1F,
    OpPush32 = 0x20,
    OpPush33 = 0x21,
    OpPush34 = 0x22,
    OpPush35 = 0x23,
    OpPush36 = 0x24,
    OpPush37 = 0x25,
    OpPush38 = 0x26,
    OpPush39 = 0x27,
    OpPush40 = 0x28,
    OpPush41 = 0x29,
    OpPush42 = 0x2A,
    OpPush43 = 0x2B,
    OpPush44 = 0x2C,
    OpPush45 = 0x2D,
    OpPush46 = 0x2E,
    OpPush47 = 0x2F,
    OpPush48 = 0x30,
    OpPush49 = 0x31,
    OpPush50 = 0x32,
    OpPush51 = 0x33,
    OpPush52 = 0x34,
    OpPush53 = 0x35,
    OpPush54 = 0x36,
    OpPush55 = 0x37,
    OpPush56 = 0x38,
    OpPush57 = 0x39,
    OpPush58 = 0x3A,
    OpPush59 = 0x3B,
    OpPush60 = 0x3C,
    OpPush61 = 0x3D,
    OpPush62 = 0x3E,
    OpPush63 = 0x3F,
    OpPush64 = 0x40,
    OpPush65 = 0x41,
    OpPush66 = 0x42,
    OpPush67 = 0x43,
    OpPush68 = 0x44,
    OpPush69 = 0x45,
    OpPush70 = 0x46,
    OpPush71 = 0x47,
    OpPush72 = 0x48,
    OpPush73 = 0x49,
    OpPush74 = 0x4A,
    OpPush75 = 0x4b,
    OpPushData1 = 0x4c,
    OpPushData2 = 0x4d,
    OpPushData4 = 0x4e,
    Op1Negate = 0x4f,
    OpReserved = 0x50,
    Op1 = 0x51,
    OpTrue = Op1,
    Op2 = 0x52,
    Op3 = 0x53,
    Op4 = 0x54,
    Op5 = 0x55,
    Op6 = 0x56,
    Op7 = 0x57,
    Op8 = 0x58,
    Op9 = 0x59,
    Op10 = 0x5a,
    Op11 = 0x5b,
    Op12 = 0x5c,
    Op13 = 0x5d,
    Op14 = 0x5e,
    Op15 = 0x5f,
    Op16 = 0x60,

    // control
    OpNop = 0x61,
    OpVer = 0x62,
    OpIf = 0x63,
    OpNotif = 0x64,
    OpVerif = 0x65,
    OpVernotif = 0x66,
    OpElse = 0x67,
    OpEndif = 0x68,
    OpVerify = 0x69,
    OpReturn = 0x6a,

    // stack ops
    OpToaltstack = 0x6b,
    OpFromaltstack = 0x6c,
    Op2Drop = 0x6d,
    Op2Dup = 0x6e,
    Op3Dup = 0x6f,
    Op2Over = 0x70,
    Op2Rot = 0x71,
    Op2Swap = 0x72,
    OpIfdup = 0x73,
    OpDepth = 0x74,
    OpDrop = 0x75,
    OpDup = 0x76,
    OpNip = 0x77,
    OpOver = 0x78,
    OpPick = 0x79,
    OpRoll = 0x7a,
    OpRot = 0x7b,
    OpSwap = 0x7c,
    OpTuck = 0x7d,

    // splice ops
    OpSize = 0x82,

    // bit logic
    OpEqual = 0x87,
    OpEqualVerify = 0x88,
    OpReserved1 = 0x89,
    OpReserved2 = 0x8a,

    // numeric
    Op1Add = 0x8b,
    Op1Sub = 0x8c,
    OpNegate = 0x8f,
    OpAbs = 0x90,
    OpNot = 0x91,
    Op0NotEqual = 0x92,
    OpAdd = 0x93,
    OpSub = 0x94,
    OpBoolAnd = 0x9a,
    OpBoolOr = 0x9b,
    OpNumEqual = 0x9c,
    OpNumEqualVerify = 0x9d,
    OpNumNotEqual = 0x9e,
    OpLessThan = 0x9f,
    OpGreaterThan = 0xa0,
    OpLessThanOrEqual = 0xa1,
    OpGreaterThanOrEqual = 0xa2,
    OpMin = 0xa3,
    OpMax = 0xa4,
    OpWithin = 0xa5,

    // disabled 4 ever:
    Op2Mul = 0x8d,
    Op2Div = 0x8e,
    OpMul = 0x95,
    OpDiv = 0x96,
    OpMod = 0x97,
    OpLshift = 0x98,
    OpRshift = 0x99,
    OpCat = 0x7e,
    OpSubstr = 0x7f,
    OpLeft = 0x80,
    OpRight = 0x81,
    OpInvert = 0x83,
    OpAnd = 0x84,
    OpOr = 0x85,
    OpXor = 0x86,

    // crypto
    OpRipemd160 = 0xa6,
    OpSha1 = 0xa7,
    OpSha256 = 0xa8,
    OpHash160 = 0xa9,
    OpHash256 = 0xaa,
    OpCodeseparator = 0xab,
    OpChecksig = 0xac,
    OpChecksigverify = 0xad,
    OpCheckmultisig = 0xae,
    OpCheckmultisigverify = 0xaf,

    // Opcode added by BIP 342 (Tapscript)
    OpChecksigadd = 0xba,

    // expansion
    OpNop1 = 0xb0,
    OpChecklocktimeverify = 0xb1,
    OpNop2 = OpChecklocktimeverify,
    OpChecksequenceverify = 0xb2,
    OpNop3 = OpChecksequenceverify,
    OpNop4 = 0xb3,
    OpNop5 = 0xb4,
    OpNop6 = 0xb5,
    OpNop7 = 0xb6,
    OpNop8 = 0xb7,
    OpNop9 = 0xb8,
    OpNop10 = 0xb9,
    OpInvalidOpCode = 0xff
}
